package util;

import java.io.FileInputStream;
import java.io.IOException;
import org.apache.poi.openxml4j.exceptions.InvalidFormatException;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellType;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.WorkbookFactory;

public class ReadExcel {
  public static String[][] getCellData(String path, String sheetName) throws InvalidFormatException, IOException {
  FileInputStream stream = new FileInputStream(path);
  Workbook workbook = WorkbookFactory.create(stream);
  Sheet s = workbook.getSheet(sheetName);
  int rowcount = s.getLastRowNum();
  int cellcount = s.getRow(0).getLastCellNum();
  String temp="",k="";
  String data[][] = new String[rowcount][cellcount];
  for (int i = 1; i <= rowcount; i++) {
   Row r = s.getRow(i);
   for (int j = 0; j < cellcount; j++) {
   Cell c = r.getCell(j);
try {
if (c.getCellTypeEnum() == CellType.STRING) {
      data[i - 1][j] = c.getStringCellValue();
} 
else if (c.getCellTypeEnum() == CellType.NUMERIC)
 {
	
      data[i - 1][j] = String.valueOf(c.getNumericCellValue());
  
}
else if (c.getCellTypeEnum() == CellType.BOOLEAN)
{
	
     data[i - 1][j] = Boolean.toString(c.getBooleanCellValue());
 
}
else if (c.getCellTypeEnum() == CellType.FORMULA)
{
	
     data[i - 1][j] = (c.getCellFormula());
 
}
} catch (Exception e) {
     e.printStackTrace();
}
   }
  }
  return data;
 }
}
